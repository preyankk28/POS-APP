package com.example.pocapp.Screens;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.print.PrintManager;
import android.util.Log;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.example.pocapp.Adapter.MyPrintDocumentAdapter;
import com.example.pocapp.Common.MainApplication;
import com.example.pocapp.Model.Screen2Model;
import com.example.pocapp.Model.SyncDonationModel;
import com.example.pocapp.R;
import com.gkemon.XMLtoPDF.PdfGenerator;
import com.gkemon.XMLtoPDF.PdfGeneratorListener;
import com.gkemon.XMLtoPDF.model.FailureResponse;
import com.gkemon.XMLtoPDF.model.SuccessResponse;
import com.google.gson.Gson;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public class Screen3Activity extends AppCompatActivity {
TextView donationidtextview;
Context context;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_screen3);
        Intent intent = getIntent();
        donationidtextview = findViewById(R.id.donationid);
        String donationid =  intent.getStringExtra("DonationId");
        donationidtextview.setText( "Your DonationId is "+donationid);





    }
    @Override
    public void onBackPressed() {
        super.onBackPressed();
        startActivity(new Intent(this, MainActivity.class));
    }

    public void printclick(View view) {
        // Get a PrintManager instance

        PdfGenerator.getBuilder()
                .setContext(context)
                .fromLayoutXMLSource()
                .fromLayoutXML(R.layout.activity_screen3,R.layout.activity_screen3)
                /* "fromLayoutXML()" takes array of layout resources.
                 * You can also invoke "fromLayoutXMLList()" method here which takes list of layout resources instead of array. */
                .setPageSize(PdfGenerator.PageSize.A4)
                /* It takes default page size like A4,A5,WRAP_CONTENT.*/
                .setFileName("Test-PDF")
                /* It is file name */
                .setFolderName("FolderA/FolderB/FolderC")
                /* It is folder name. If you set the folder name like this pattern (FolderA/FolderB/FolderC), then
                 * FolderA creates first.Then FolderB inside FolderB and also FolderC inside the FolderB and finally
                 * the pdf file named "Test-PDF.pdf" will be store inside the FolderB. */
                .openPDFafterGeneration(true)
                /* It true then the generated pdf will be shown after generated. */
                .build(new PdfGeneratorListener() {
                    @Override
                    public void onFailure(FailureResponse failureResponse) {
                        super.onFailure(failureResponse);
                        /* If pdf is not generated by an error then you will findout the reason behind it
                         * from this FailureResponse. */
                    }
                    @Override
                    public void onStartPDFGeneration() {
                        /*When PDF generation begins to start*/
                    }

                    @Override
                    public void onFinishPDFGeneration() {
                        /*When PDF generation is finished*/
                    }

                    @Override
                    public void showLog(String log) {
                        super.showLog(log);
                        /*It shows logs of events inside the pdf generation process*/
                    }

                    @Override
                    public void onSuccess(SuccessResponse response) {
                        super.onSuccess(response);

                    }
                });
    }
    private void doPhotoPrint() {


    }

    public void newdonation(View view) {

        startActivity(new Intent(this, MainActivity.class));


    }

    public void doneclick(View view) {
        SyncDonationModel syncDonationModel = new SyncDonationModel("test@gmail.com", "Test123", "test456",
                "4578965878","HMF20210221-713-72","Testingggggggggggg",true,true);

        Log.e("TAG", "Model"+ new Gson().toJson(syncDonationModel));

        MainApplication.apiManager.createscreen3done(syncDonationModel, new Callback<SyncDonationModel>() {
            @Override
            public void onResponse(Call<SyncDonationModel> call, Response<SyncDonationModel> response) {
                Log.e("TAG", "Msg" + response);
               SyncDonationModel responseUser = response.body();
                Log.e("TAG", "Gson" + new Gson().toJson(responseUser));
                if (response.isSuccessful() && responseUser != null) {
                    //  Toast.makeText(Screen2Activity.this,
//                            String.format("User %s with job %s was created at %s with id %s",
                    responseUser.getMessage();

                    Toast.makeText(Screen3Activity.this,
                            String.format(responseUser.getMessage())
                            , Toast.LENGTH_LONG).show();



//                                    responseUser.getCreatedAt(),
//                                    responseUser.getId()
//                                   ),
//                            Toast.LENGTH_LONG)
//                            .show();
                } else {
                    Toast.makeText(Screen3Activity.this,
                            String.format("Response is %s", String.valueOf(response.code()))
                            , Toast.LENGTH_LONG).show();
                }

            }

            @Override
            public void onFailure(Call<SyncDonationModel> call, Throwable t) {

            }
        });

    }
}